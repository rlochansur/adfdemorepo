{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-ENV-DEV-002"
		},
		"ls_AzureSynapseAnalytics_002_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_AzureSynapseAnalytics_002'"
		},
		"ls_adfstorageacccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_adfstorageacccount'"
		},
		"ls_SqlServerOnPC_adfdemo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SqlServerOnPC_adfdemo'",
			"defaultValue": "Integrated Security=False;Data Source=@{linkedService().serverName};Initial Catalog=@{linkedService().dbName};User ID=@{linkedService().userName};Password=@{linkedService().password}"
		},
		"SHintegrationRuntimeShared_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98301a5a-cf56-4c9e-9285-2a76c5d8bb9a/resourcegroups/RG-ADF/providers/Microsoft.DataFactory/factories/ADF-ENV-DEV-001/integrationruntimes/selfHostedIntegrationRuntime1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSynapseAnalytics_002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_AzureSynapseAnalytics_002_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adfstorageacccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_adfstorageacccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHintegrationRuntimeShared')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('SHintegrationRuntimeShared_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSynapseAnalytics_employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapseAnalytics_002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "employeesDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapseAnalytics_002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dept')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dept_ind.csv",
						"folderPath": "input",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Dept ID",
						"type": "String"
					},
					{
						"name": "Emp ID",
						"type": "String"
					},
					{
						"name": "Dept Code",
						"type": "String"
					},
					{
						"name": "Dept Description",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employee_paramtest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employee_paramtest.csv",
						"folderPath": "output",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"folderPath": "input",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Years Of Experience",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_ind')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees_ind.csv",
						"folderPath": "input",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Years Of Experience",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "input",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Years Of Experience",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_txt_trgt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Years Of Experience",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_usa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfstorageacccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees_usa.csv",
						"folderPath": "input",
						"container": "adfdemostorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Job Title",
						"type": "String"
					},
					{
						"name": "Years Of Experience",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfstorageacccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SqlServerOnPC_adfdemo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SqlServerOnPC_adfdemo_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHintegrationRuntimeShared",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHintegrationRuntimeShared')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Convert csv to txt",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "First Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "First Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Last Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Last Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Job Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Job Title",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Years Of Experience",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Years Of Experience",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_employees_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_employees_txt_trgt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T05:11:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employees_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_employees_txt_trgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_getMetadata_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_employees_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Employees",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'employees')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Payroll",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'payroll')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Employees",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Employees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Employees').output",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_employees_new",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@pipeline().parameters.containerName",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@pipeline().parameters.directoryName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEach Employees_copy1",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Payroll",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Payroll').output",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"containerName": {
						"type": "string",
						"defaultValue": "adfdemostorage"
					},
					"directoryName": {
						"type": "string",
						"defaultValue": "input"
					},
					"fileName": {
						"type": "string"
					},
					"dbName": {
						"type": "string",
						"defaultValue": "adfdemo"
					},
					"userName": {
						"type": "string",
						"defaultValue": "admin"
					},
					"serverName": {
						"type": "string",
						"defaultValue": "LAPTOP-4PH0KPR3"
					},
					"password": {
						"type": "string",
						"defaultValue": "admin1234"
					},
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-23T05:11:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employees_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_employees_new')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_system_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "trunacate auditlog table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[prcAUDITLOG]",
							"storedProcedureParameters": {
								"GroupId": {
									"value": {
										"value": "@pipeline().GroupId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggeredByPipelineName": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggeredByPipelineRunId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"Workspace": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_SqlServerOnPC_adfdemo",
							"type": "LinkedServiceReference",
							"parameters": {
								"serverName": {
									"value": "@pipeline().parameters.serverName",
									"type": "Expression"
								},
								"dbName": {
									"value": "@pipeline().parameters.dbName",
									"type": "Expression"
								},
								"userName": {
									"value": "@pipeline().parameters.userName",
									"type": "Expression"
								},
								"password": {
									"value": "@pipeline().parameters.password",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "trunacate auditlog table",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_SqlServerOnPC_adfdemo",
							"type": "LinkedServiceReference",
							"parameters": {
								"serverName": {
									"value": "@pipeline().parameters.serverName",
									"type": "Expression"
								},
								"dbName": {
									"value": "@pipeline().parameters.dbName",
									"type": "Expression"
								},
								"userName": {
									"value": "@pipeline().parameters.userName",
									"type": "Expression"
								},
								"password": {
									"value": "@pipeline().parameters.password",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@{concat('truncate table ',pipeline().parameters.schemaName,'.', pipeline().parameters.tableName)}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"serverName": {
						"type": "string",
						"defaultValue": "LAPTOP-4PH0KPR3"
					},
					"dbName": {
						"type": "string",
						"defaultValue": "adfdemo"
					},
					"userName": {
						"type": "string",
						"defaultValue": "admin"
					},
					"password": {
						"type": "string",
						"defaultValue": "admin1234"
					},
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "auditlog"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-22T17:28:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlServerOnPC_adfdemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SqlServere_employeesDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlServerOnPC_adfdemo",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": "LAPTOP-4PH0KPR3",
						"dbName": "adfdemo",
						"userName": "admin",
						"password": "admin1234"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Emp ID",
						"type": "nvarchar"
					},
					{
						"name": "First Name",
						"type": "nvarchar"
					},
					{
						"name": "Last Name",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "Job Title",
						"type": "nvarchar"
					},
					{
						"name": "Years Of Experience",
						"type": "nvarchar"
					},
					{
						"name": "Salary",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Dept Code",
						"type": "nvarchar"
					},
					{
						"name": "Dept Desc",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employeesDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlServerOnPC_adfdemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_onpc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlServerOnPC_adfdemo",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": "adfdemo",
						"userName": "admin",
						"password": "admin1234"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "auditlog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlServerOnPC_adfdemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_onpc1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlServerOnPC_adfdemo",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": {
							"value": "@dataset().serverName",
							"type": "Expression"
						},
						"dbName": {
							"value": "@dataset().dbName",
							"type": "Expression"
						},
						"userName": {
							"value": "@dataset().userName",
							"type": "Expression"
						},
						"password": {
							"value": "@dataset().password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					},
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlServerOnPC_adfdemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_employees_ind",
								"type": "DatasetReference"
							},
							"name": "EmployeesInd"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_employee_paramtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     DeptCode as string ('HR')",
						"}",
						"source(output(",
						"          EmpID as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Email as string,",
						"          Phone as string,",
						"          Gender as string,",
						"          {Job Title} as string,",
						"          {Years Of Experience} as string,",
						"          Salary as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> EmployeesInd",
						"EmployeesInd select(mapColumn(",
						"          EmpID,",
						"          {First Name},",
						"          {Last Name},",
						"          Email,",
						"          Phone,",
						"          Gender,",
						"          {Job Title},",
						"          {Years Of Experience},",
						"          Salary,",
						"          Country",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(DEPTCODE = $DeptCode) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employees_ind')]",
				"[concat(variables('factoryId'), '/datasets/ds_employee_paramtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mappingDataFlow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_employees_ind",
								"type": "DatasetReference"
							},
							"name": "employees"
						},
						{
							"dataset": {
								"referenceName": "ds_dept",
								"type": "DatasetReference"
							},
							"name": "department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_AzureSynapseAnalytics_employees",
								"type": "DatasetReference"
							},
							"name": "employeeDetails",
							"description": "Export data to dssynapse_employeesDetails"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "ModifyColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpID as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Email as string,",
						"          Phone as string,",
						"          Gender as string,",
						"          {Job Title} as string,",
						"          {Years Of Experience} as string,",
						"          Salary as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employees",
						"source(output(",
						"          {Dept ID} as string,",
						"          {Emp ID} as string,",
						"          {Dept Code} as string,",
						"          {Dept Description} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> department",
						"employees, department join(EmpID == {Emp ID},",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 derive({First Name} = upper({First Name}),",
						"          {Last Name} = upper({Last Name})) ~> ModifyColumns1",
						"ModifyColumns1 filter({Dept Code}=='IT') ~> filter1",
						"ModifyColumns1 aggregate(groupBy({Dept Code}),",
						"     EmpID = count()) ~> aggregate1",
						"join1 split(equals({Dept Code},'IT'),",
						"     disjoint: false) ~> split1@(ItDept, OtherDept)",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     preSQLs:['truncate table dbo.employeesDetails'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmpID,",
						"          FirstName = {First Name},",
						"          LastName = {Last Name},",
						"          Email,",
						"          Phone,",
						"          Gender,",
						"          JobTitle = {Job Title},",
						"          YearsOfExperience = {Years Of Experience},",
						"          Salary,",
						"          Country,",
						"          DeptID = {Dept ID},",
						"          DeptCode = {Dept Code},",
						"          DeptDescription = {Dept Description}",
						"     )) ~> employeeDetails"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employees_ind')]",
				"[concat(variables('factoryId'), '/datasets/ds_dept')]",
				"[concat(variables('factoryId'), '/datasets/ds_AzureSynapseAnalytics_employees')]"
			]
		}
	]
}